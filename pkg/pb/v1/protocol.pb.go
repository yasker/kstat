// Code generated by protoc-gen-go. DO NOT EDIT.
// source: pb/v1/protocol.proto

package pb_v1

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type WatchRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WatchRequest) Reset()         { *m = WatchRequest{} }
func (m *WatchRequest) String() string { return proto.CompactTextString(m) }
func (*WatchRequest) ProtoMessage()    {}
func (*WatchRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_47abfcb77a0ae7f5, []int{0}
}

func (m *WatchRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WatchRequest.Unmarshal(m, b)
}
func (m *WatchRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WatchRequest.Marshal(b, m, deterministic)
}
func (m *WatchRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WatchRequest.Merge(m, src)
}
func (m *WatchRequest) XXX_Size() int {
	return xxx_messageInfo_WatchRequest.Size(m)
}
func (m *WatchRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_WatchRequest.DiscardUnknown(m)
}

var xxx_messageInfo_WatchRequest proto.InternalMessageInfo

type WatchResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WatchResponse) Reset()         { *m = WatchResponse{} }
func (m *WatchResponse) String() string { return proto.CompactTextString(m) }
func (*WatchResponse) ProtoMessage()    {}
func (*WatchResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_47abfcb77a0ae7f5, []int{1}
}

func (m *WatchResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WatchResponse.Unmarshal(m, b)
}
func (m *WatchResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WatchResponse.Marshal(b, m, deterministic)
}
func (m *WatchResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WatchResponse.Merge(m, src)
}
func (m *WatchResponse) XXX_Size() int {
	return xxx_messageInfo_WatchResponse.Size(m)
}
func (m *WatchResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_WatchResponse.DiscardUnknown(m)
}

var xxx_messageInfo_WatchResponse proto.InternalMessageInfo

type GetMetricsRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetMetricsRequest) Reset()         { *m = GetMetricsRequest{} }
func (m *GetMetricsRequest) String() string { return proto.CompactTextString(m) }
func (*GetMetricsRequest) ProtoMessage()    {}
func (*GetMetricsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_47abfcb77a0ae7f5, []int{2}
}

func (m *GetMetricsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetMetricsRequest.Unmarshal(m, b)
}
func (m *GetMetricsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetMetricsRequest.Marshal(b, m, deterministic)
}
func (m *GetMetricsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetMetricsRequest.Merge(m, src)
}
func (m *GetMetricsRequest) XXX_Size() int {
	return xxx_messageInfo_GetMetricsRequest.Size(m)
}
func (m *GetMetricsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetMetricsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetMetricsRequest proto.InternalMessageInfo

type GetMetricsResponse struct {
	ClusterMetrics       map[string]*ClusterMetric `protobuf:"bytes,1,rep,name=cluster_metrics,json=clusterMetrics,proto3" json:"cluster_metrics,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *GetMetricsResponse) Reset()         { *m = GetMetricsResponse{} }
func (m *GetMetricsResponse) String() string { return proto.CompactTextString(m) }
func (*GetMetricsResponse) ProtoMessage()    {}
func (*GetMetricsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_47abfcb77a0ae7f5, []int{3}
}

func (m *GetMetricsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetMetricsResponse.Unmarshal(m, b)
}
func (m *GetMetricsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetMetricsResponse.Marshal(b, m, deterministic)
}
func (m *GetMetricsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetMetricsResponse.Merge(m, src)
}
func (m *GetMetricsResponse) XXX_Size() int {
	return xxx_messageInfo_GetMetricsResponse.Size(m)
}
func (m *GetMetricsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetMetricsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetMetricsResponse proto.InternalMessageInfo

func (m *GetMetricsResponse) GetClusterMetrics() map[string]*ClusterMetric {
	if m != nil {
		return m.ClusterMetrics
	}
	return nil
}

type ClusterMetric struct {
	InstanceMetrics      map[string]*InstanceMetric `protobuf:"bytes,1,rep,name=instance_metrics,json=instanceMetrics,proto3" json:"instance_metrics,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}

func (m *ClusterMetric) Reset()         { *m = ClusterMetric{} }
func (m *ClusterMetric) String() string { return proto.CompactTextString(m) }
func (*ClusterMetric) ProtoMessage()    {}
func (*ClusterMetric) Descriptor() ([]byte, []int) {
	return fileDescriptor_47abfcb77a0ae7f5, []int{4}
}

func (m *ClusterMetric) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClusterMetric.Unmarshal(m, b)
}
func (m *ClusterMetric) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClusterMetric.Marshal(b, m, deterministic)
}
func (m *ClusterMetric) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClusterMetric.Merge(m, src)
}
func (m *ClusterMetric) XXX_Size() int {
	return xxx_messageInfo_ClusterMetric.Size(m)
}
func (m *ClusterMetric) XXX_DiscardUnknown() {
	xxx_messageInfo_ClusterMetric.DiscardUnknown(m)
}

var xxx_messageInfo_ClusterMetric proto.InternalMessageInfo

func (m *ClusterMetric) GetInstanceMetrics() map[string]*InstanceMetric {
	if m != nil {
		return m.InstanceMetrics
	}
	return nil
}

type InstanceMetric struct {
	DeviceMetrics        map[string]int64 `protobuf:"bytes,1,rep,name=device_metrics,json=deviceMetrics,proto3" json:"device_metrics,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	Total                int64            `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
	Average              int64            `protobuf:"varint,3,opt,name=average,proto3" json:"average,omitempty"`
	Value                int64            `protobuf:"varint,4,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *InstanceMetric) Reset()         { *m = InstanceMetric{} }
func (m *InstanceMetric) String() string { return proto.CompactTextString(m) }
func (*InstanceMetric) ProtoMessage()    {}
func (*InstanceMetric) Descriptor() ([]byte, []int) {
	return fileDescriptor_47abfcb77a0ae7f5, []int{5}
}

func (m *InstanceMetric) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InstanceMetric.Unmarshal(m, b)
}
func (m *InstanceMetric) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InstanceMetric.Marshal(b, m, deterministic)
}
func (m *InstanceMetric) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InstanceMetric.Merge(m, src)
}
func (m *InstanceMetric) XXX_Size() int {
	return xxx_messageInfo_InstanceMetric.Size(m)
}
func (m *InstanceMetric) XXX_DiscardUnknown() {
	xxx_messageInfo_InstanceMetric.DiscardUnknown(m)
}

var xxx_messageInfo_InstanceMetric proto.InternalMessageInfo

func (m *InstanceMetric) GetDeviceMetrics() map[string]int64 {
	if m != nil {
		return m.DeviceMetrics
	}
	return nil
}

func (m *InstanceMetric) GetTotal() int64 {
	if m != nil {
		return m.Total
	}
	return 0
}

func (m *InstanceMetric) GetAverage() int64 {
	if m != nil {
		return m.Average
	}
	return 0
}

func (m *InstanceMetric) GetValue() int64 {
	if m != nil {
		return m.Value
	}
	return 0
}

func init() {
	proto.RegisterType((*WatchRequest)(nil), "pb.v1.WatchRequest")
	proto.RegisterType((*WatchResponse)(nil), "pb.v1.WatchResponse")
	proto.RegisterType((*GetMetricsRequest)(nil), "pb.v1.GetMetricsRequest")
	proto.RegisterType((*GetMetricsResponse)(nil), "pb.v1.GetMetricsResponse")
	proto.RegisterMapType((map[string]*ClusterMetric)(nil), "pb.v1.GetMetricsResponse.ClusterMetricsEntry")
	proto.RegisterType((*ClusterMetric)(nil), "pb.v1.ClusterMetric")
	proto.RegisterMapType((map[string]*InstanceMetric)(nil), "pb.v1.ClusterMetric.InstanceMetricsEntry")
	proto.RegisterType((*InstanceMetric)(nil), "pb.v1.InstanceMetric")
	proto.RegisterMapType((map[string]int64)(nil), "pb.v1.InstanceMetric.DeviceMetricsEntry")
}

func init() { proto.RegisterFile("pb/v1/protocol.proto", fileDescriptor_47abfcb77a0ae7f5) }

var fileDescriptor_47abfcb77a0ae7f5 = []byte{
	// 383 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x53, 0xc1, 0x4a, 0xeb, 0x40,
	0x14, 0xed, 0x34, 0x2f, 0xef, 0xf1, 0x6e, 0x6d, 0x5a, 0x6f, 0x23, 0xc4, 0xac, 0x4a, 0x56, 0x51,
	0x31, 0xb5, 0x15, 0x44, 0x5c, 0x09, 0x55, 0xc4, 0x85, 0x08, 0x51, 0x2c, 0xae, 0x24, 0x4d, 0x07,
	0x0d, 0xc6, 0x24, 0x26, 0xd3, 0x40, 0x3f, 0xc2, 0x7f, 0x72, 0xe3, 0xc7, 0xf8, 0x17, 0xd2, 0x99,
	0x29, 0x66, 0x6c, 0xdc, 0xcd, 0x3d, 0xf7, 0x9c, 0x7b, 0xe7, 0x0c, 0x67, 0xc0, 0xcc, 0xa6, 0x83,
	0x72, 0x38, 0xc8, 0xf2, 0x94, 0xa5, 0x61, 0x1a, 0x7b, 0xfc, 0x80, 0x7a, 0x36, 0xf5, 0xca, 0xa1,
	0x63, 0xc0, 0xc6, 0x24, 0x60, 0xe1, 0x93, 0x4f, 0x5f, 0xe7, 0xb4, 0x60, 0x4e, 0x07, 0xda, 0xb2,
	0x2e, 0xb2, 0x34, 0x29, 0xa8, 0xd3, 0x83, 0xcd, 0x0b, 0xca, 0xae, 0x28, 0xcb, 0xa3, 0xb0, 0x58,
	0xb1, 0x3e, 0x08, 0x60, 0x15, 0x15, 0x5c, 0xbc, 0x83, 0x4e, 0x18, 0xcf, 0x0b, 0x46, 0xf3, 0x87,
	0x17, 0xd1, 0xb2, 0x48, 0x5f, 0x73, 0x5b, 0xa3, 0x7d, 0x8f, 0x6f, 0xf3, 0xd6, 0x35, 0xde, 0x58,
	0x08, 0x24, 0x7c, 0x9e, 0xb0, 0x7c, 0xe1, 0x1b, 0xa1, 0x02, 0xda, 0x13, 0xe8, 0xd5, 0xd0, 0xb0,
	0x0b, 0xda, 0x33, 0x5d, 0x58, 0xa4, 0x4f, 0xdc, 0xff, 0xfe, 0xf2, 0x88, 0xbb, 0xa0, 0x97, 0x41,
	0x3c, 0xa7, 0x56, 0xb3, 0x4f, 0xdc, 0xd6, 0xc8, 0x94, 0x6b, 0x15, 0xb1, 0x2f, 0x28, 0x27, 0xcd,
	0x63, 0xe2, 0xbc, 0x13, 0x68, 0x2b, 0x4d, 0xbc, 0x85, 0x6e, 0x94, 0x14, 0x2c, 0x48, 0x42, 0xfa,
	0xc3, 0xc3, 0x4e, 0xdd, 0x30, 0xef, 0x52, 0x92, 0x95, 0xfb, 0x77, 0x22, 0x15, 0xb5, 0xef, 0xc1,
	0xac, 0x23, 0xd6, 0x38, 0xd8, 0x53, 0x1d, 0x6c, 0xc9, 0xa5, 0xaa, 0xba, 0x6a, 0xe1, 0x93, 0x80,
	0xa1, 0x76, 0xf1, 0x1a, 0x8c, 0x19, 0x2d, 0xa3, 0x35, 0x07, 0x6e, 0xed, 0x30, 0xef, 0x8c, 0x73,
	0x15, 0x03, 0xed, 0x59, 0x15, 0x43, 0x13, 0x74, 0x96, 0xb2, 0x20, 0xe6, 0x97, 0xd2, 0x7c, 0x51,
	0xa0, 0x05, 0xff, 0x82, 0x92, 0xe6, 0xc1, 0x23, 0xb5, 0x34, 0x8e, 0xaf, 0xca, 0x25, 0x5f, 0x98,
	0xf8, 0x23, 0xf8, 0xbc, 0xb0, 0x4f, 0x01, 0xd7, 0x57, 0xd5, 0x3c, 0x81, 0x59, 0x7d, 0x02, 0xad,
	0xe2, 0x75, 0xf4, 0x46, 0xc0, 0x90, 0xe2, 0x1b, 0x9a, 0x2f, 0x47, 0xe1, 0x11, 0xe8, 0x3c, 0xaf,
	0xd8, 0x93, 0xe6, 0xaa, 0x69, 0xb6, 0x4d, 0x15, 0x94, 0x91, 0x6e, 0x1c, 0x10, 0x1c, 0x03, 0x7c,
	0x87, 0x11, 0xad, 0x9a, 0x7c, 0x8a, 0x09, 0xdb, 0xbf, 0x26, 0xd7, 0x69, 0x4c, 0xff, 0xf2, 0xaf,
	0x74, 0xf8, 0x15, 0x00, 0x00, 0xff, 0xff, 0x4a, 0xee, 0xec, 0xe4, 0x62, 0x03, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MetricsServiceClient is the client API for MetricsService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MetricsServiceClient interface {
	Watch(ctx context.Context, in *WatchRequest, opts ...grpc.CallOption) (MetricsService_WatchClient, error)
	GetMetrics(ctx context.Context, in *GetMetricsRequest, opts ...grpc.CallOption) (*GetMetricsResponse, error)
}

type metricsServiceClient struct {
	cc *grpc.ClientConn
}

func NewMetricsServiceClient(cc *grpc.ClientConn) MetricsServiceClient {
	return &metricsServiceClient{cc}
}

func (c *metricsServiceClient) Watch(ctx context.Context, in *WatchRequest, opts ...grpc.CallOption) (MetricsService_WatchClient, error) {
	stream, err := c.cc.NewStream(ctx, &_MetricsService_serviceDesc.Streams[0], "/pb.v1.MetricsService/Watch", opts...)
	if err != nil {
		return nil, err
	}
	x := &metricsServiceWatchClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type MetricsService_WatchClient interface {
	Recv() (*WatchResponse, error)
	grpc.ClientStream
}

type metricsServiceWatchClient struct {
	grpc.ClientStream
}

func (x *metricsServiceWatchClient) Recv() (*WatchResponse, error) {
	m := new(WatchResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *metricsServiceClient) GetMetrics(ctx context.Context, in *GetMetricsRequest, opts ...grpc.CallOption) (*GetMetricsResponse, error) {
	out := new(GetMetricsResponse)
	err := c.cc.Invoke(ctx, "/pb.v1.MetricsService/GetMetrics", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MetricsServiceServer is the server API for MetricsService service.
type MetricsServiceServer interface {
	Watch(*WatchRequest, MetricsService_WatchServer) error
	GetMetrics(context.Context, *GetMetricsRequest) (*GetMetricsResponse, error)
}

// UnimplementedMetricsServiceServer can be embedded to have forward compatible implementations.
type UnimplementedMetricsServiceServer struct {
}

func (*UnimplementedMetricsServiceServer) Watch(req *WatchRequest, srv MetricsService_WatchServer) error {
	return status.Errorf(codes.Unimplemented, "method Watch not implemented")
}
func (*UnimplementedMetricsServiceServer) GetMetrics(ctx context.Context, req *GetMetricsRequest) (*GetMetricsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetMetrics not implemented")
}

func RegisterMetricsServiceServer(s *grpc.Server, srv MetricsServiceServer) {
	s.RegisterService(&_MetricsService_serviceDesc, srv)
}

func _MetricsService_Watch_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(WatchRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(MetricsServiceServer).Watch(m, &metricsServiceWatchServer{stream})
}

type MetricsService_WatchServer interface {
	Send(*WatchResponse) error
	grpc.ServerStream
}

type metricsServiceWatchServer struct {
	grpc.ServerStream
}

func (x *metricsServiceWatchServer) Send(m *WatchResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _MetricsService_GetMetrics_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetMetricsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MetricsServiceServer).GetMetrics(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.v1.MetricsService/GetMetrics",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MetricsServiceServer).GetMetrics(ctx, req.(*GetMetricsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _MetricsService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.v1.MetricsService",
	HandlerType: (*MetricsServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetMetrics",
			Handler:    _MetricsService_GetMetrics_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Watch",
			Handler:       _MetricsService_Watch_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "pb/v1/protocol.proto",
}
